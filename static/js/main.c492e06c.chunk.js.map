{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["proxy","columns","field","headerName","sort","pinned","width","checkboxSelection","type","cellStyle","params","Number","value","split","backgroundColor","color","App","useState","loading","setLoading","data","setData","localArr","getConfig","Promise","resolve","reject","fetch","then","response","json","catch","err","Error","configs","a","config","url","id","ticker","country","morningstar","console","log","Date","toUTCString","rating","Object","entries","key","startsWith","upside","replace","toFixed","useEffect","runLoop","toDateString","toLocaleTimeString","Box","sx","height","CircularProgress","className","style","window","innerHeight","rowData","columnDefs","map","sortable","filter","resizable","rowSelection","rowMultiSelectWithClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c492e06c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport \"./App.css\";\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\n\r\nconst proxy = 'https://stock-scrape.herokuapp.com/api/stonks/';\r\n\r\nconst columns = [\r\n  {\r\n    field: 'id',\r\n    headerName: 'ID',\r\n    sort: 'asc',\r\n    pinned: 'left',\r\n    width: 80,\r\n    checkboxSelection: true\r\n  },\r\n  {\r\n    field: 'Ticker',\r\n    headerName: 'Ticker',\r\n    width: 100,\r\n    pinned: 'left',\r\n  },\r\n  {\r\n    field: 'Name',\r\n    headerName: 'Name',\r\n    type: 'name',\r\n    width: 175\r\n  },\r\n  {\r\n    field: 'Category',\r\n    headerName: 'Category',\r\n    type: 'category',\r\n    width: 150\r\n  },\r\n  {\r\n    field: 'Price',\r\n    headerName: 'Price',\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: 'Change',\r\n    headerName: 'Change',\r\n    cellStyle: params => {\r\n      if (Number(params.value?.split('%')[0]) > 2.5) {\r\n        return { backgroundColor: 'green', color: 'white' }\r\n      }\r\n      else if (Number(params.value?.split('%')[0]) < -2.5) {\r\n        return { backgroundColor: 'red', color: 'white' }\r\n      }\r\n    },\r\n  },\r\n  {\r\n    field: '52W-Low',\r\n    headerName: '52W-Low',\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: '52W-High',\r\n    headerName: '52W-High',\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: 'Volume',\r\n    headerName: 'Volume',\r\n    width: 175\r\n  },\r\n  {\r\n    field: 'Market-Cap',\r\n    headerName: 'Market-Cap',\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: 'DividendYield',\r\n    headerName: 'DividendYield',\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: 'Ex-Dividend-Date',\r\n    headerName: 'Ex-Dividend-Date',\r\n    type: 'date',\r\n  },\r\n  {\r\n    field: 'MER',\r\n    headerName: 'MER',\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: 'Risk',\r\n    headerName: 'Risk',\r\n    width: 125\r\n  },\r\n  {\r\n    field: 'Return',\r\n    headerName: 'Return',\r\n    width: 125\r\n  },\r\n  {\r\n    field: 'Rating',\r\n    headerName: 'Rating'\r\n  },\r\n  {\r\n    field: 'Inception',\r\n    headerName: 'Inception',\r\n    type: 'date',\r\n    width: 150,\r\n  },\r\n  {\r\n    field: 'Assets',\r\n    headerName: 'Assets',\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: 'DividendYield',\r\n    headerName: 'DividendYield',\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: '5d-return',\r\n    headerName: '5d-return',\r\n    type: 'number',\r\n    cellStyle: params => {\r\n      if (Number(params.value?.split('%')[0]) > 2.5) {\r\n        return { backgroundColor: 'green', color: 'white' }\r\n      }\r\n      else if (Number(params.value?.split('%')[0]) < -2.5) {\r\n        return { backgroundColor: 'red', color: 'white' }\r\n      }\r\n    },\r\n  },\r\n  {\r\n    field: '1m-return',\r\n    headerName: '1m-return',\r\n    type: 'number',\r\n    cellStyle: params => {\r\n      if (Number(params.value?.split('%')[0]) > 2.5) {\r\n        return { backgroundColor: 'green', color: 'white' }\r\n      }\r\n      else if (Number(params.value?.split('%')[0]) < -2.5) {\r\n        return { backgroundColor: 'red', color: 'white' }\r\n      }\r\n    },\r\n  },\r\n  {\r\n    field: '3m-return',\r\n    headerName: '3m-return',\r\n    type: 'number',\r\n    cellStyle: params => {\r\n      if (Number(params.value?.split('%')[0]) > 2.5) {\r\n        return { backgroundColor: 'green', color: 'white' }\r\n      }\r\n      else if (Number(params.value?.split('%')[0]) < -2.5) {\r\n        return { backgroundColor: 'red', color: 'white' }\r\n      }\r\n    },\r\n  },\r\n  {\r\n    field: '6m-return',\r\n    headerName: '6m-return',\r\n    type: 'number',\r\n    cellStyle: params => {\r\n      if (Number(params.value?.split('%')[0]) > 2.5) {\r\n        return { backgroundColor: 'green', color: 'white' }\r\n      }\r\n      else if (Number(params.value?.split('%')[0]) < -2.5) {\r\n        return { backgroundColor: 'red', color: 'white' }\r\n      }\r\n    },\r\n  },\r\n  {\r\n    field: '1y-return',\r\n    headerName: '1y-return',\r\n    type: 'number',\r\n    cellStyle: params => {\r\n      if (Number(params.value?.split('%')[0]) > 2.5) {\r\n        return { backgroundColor: 'green', color: 'white' }\r\n      }\r\n      else if (Number(params.value?.split('%')[0]) < -2.5) {\r\n        return { backgroundColor: 'red', color: 'white' }\r\n      }\r\n    },\r\n  },\r\n  {\r\n    field: '3y-return',\r\n    headerName: '3y-return',\r\n    type: 'number',\r\n    cellStyle: params => {\r\n      if (Number(params.value?.split('%')[0]) > 5) {\r\n        return { backgroundColor: 'green', color: 'white' }\r\n      }\r\n      else if (Number(params.value?.split('%')[0]) < -5) {\r\n        return { backgroundColor: 'red', color: 'white' }\r\n      }\r\n    },\r\n  },\r\n  {\r\n    field: '5y-return',\r\n    headerName: '5y-return',\r\n    type: 'number',\r\n    cellStyle: params => {\r\n      if (Number(params.value?.split('%')[0]) > 10) {\r\n        return { backgroundColor: 'green', color: 'white' }\r\n      }\r\n      else if (Number(params.value?.split('%')[0]) < -10) {\r\n        return { backgroundColor: 'red', color: 'white' }\r\n      }\r\n    },\r\n  },\r\n  {\r\n    field: '10y-return',\r\n    headerName: '10y-return',\r\n    type: 'number',\r\n    cellStyle: params => {\r\n      if (Number(params.value?.split('%')[0]) > 15) {\r\n        return { backgroundColor: 'green', color: 'white' }\r\n      }\r\n      else if (Number(params.value?.split('%')[0]) < -15) {\r\n        return { backgroundColor: 'red', color: 'white' }\r\n      }\r\n    },\r\n  },\r\n  {\r\n    field: 'AP - Mar',\r\n    headerName: 'Mar',\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: 'AP - Mar Upside',\r\n    headerName: 'Mar Upside',\r\n    width: 150,\r\n    cellStyle: params => {\r\n      if (Number(params.value?.split('%')[0]) > 2.5) {\r\n        return { backgroundColor: 'green', color: 'white' }\r\n      }\r\n      else if (Number(params.value?.split('%')[0]) < -2.5) {\r\n        return { backgroundColor: 'red', color: 'white' }\r\n      }\r\n    },\r\n  },\r\n  {\r\n    field: 'AP - Apr',\r\n    headerName: 'Apr',\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: 'AP - Apr Upside',\r\n    headerName: 'Apr Upside',\r\n    width: 150,\r\n    cellStyle: params => {\r\n      if (Number(params.value?.split('%')[0]) > 2.5) {\r\n        return { backgroundColor: 'green', color: 'white' }\r\n      }\r\n      else if (Number(params.value?.split('%')[0]) < -2.5) {\r\n        return { backgroundColor: 'red', color: 'white' }\r\n      }\r\n    },\r\n  },\r\n  {\r\n    field: 'AP - May',\r\n    headerName: 'May',\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: 'AP - May Upside',\r\n    headerName: 'May Upside',\r\n    width: 150,\r\n    cellStyle: params => {\r\n      if (Number(params.value?.split('%')[0]) > 2.5) {\r\n        return { backgroundColor: 'green', color: 'white' }\r\n      }\r\n      else if (Number(params.value?.split('%')[0]) < -2.5) {\r\n        return { backgroundColor: 'red', color: 'white' }\r\n      }\r\n    },\r\n  },\r\n  {\r\n    field: 'AP - Jun',\r\n    headerName: 'Jun',\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: 'AP - Jun Upside',\r\n    headerName: 'Jun Upside',\r\n    width: 150,\r\n    cellStyle: params => {\r\n      if (Number(params.value?.split('%')[0]) > 2.5) {\r\n        return { backgroundColor: 'green', color: 'white' }\r\n      }\r\n      else if (Number(params.value?.split('%')[0]) < -2.5) {\r\n        return { backgroundColor: 'red', color: 'white' }\r\n      }\r\n    },\r\n  },\r\n  {\r\n    field: 'AP - Aug',\r\n    headerName: 'Aug',\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: 'AP - Aug Upside',\r\n    headerName: 'Aug Upside',\r\n    width: 150,\r\n    cellStyle: params => {\r\n      if (Number(params.value?.split('%')[0]) > 2.5) {\r\n        return { backgroundColor: 'green', color: 'white' }\r\n      }\r\n      else if (Number(params.value?.split('%')[0]) < -2.5) {\r\n        return { backgroundColor: 'red', color: 'white' }\r\n      }\r\n    },\r\n  },\r\n  {\r\n    field: 'AP - Sep',\r\n    headerName: 'Sep',\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: 'AP - Sep Upside',\r\n    headerName: 'Sep Upside',\r\n    width: 150,\r\n    cellStyle: params => {\r\n      if (Number(params.value?.split('%')[0]) > 2.5) {\r\n        return { backgroundColor: 'green', color: 'white' }\r\n      }\r\n      else if (Number(params.value?.split('%')[0]) < -2.5) {\r\n        return { backgroundColor: 'red', color: 'white' }\r\n      }\r\n    },\r\n  },\r\n  {\r\n    field: 'AP - Oct',\r\n    headerName: 'Oct',\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: 'AP - Oct Upside',\r\n    headerName: 'Oct Upside',\r\n    width: 150,\r\n    cellStyle: params => {\r\n      if (Number(params.value?.split('%')[0]) > 2.5) {\r\n        return { backgroundColor: 'green', color: 'white' }\r\n      }\r\n      else if (Number(params.value?.split('%')[0]) < -2.5) {\r\n        return { backgroundColor: 'red', color: 'white' }\r\n      }\r\n    },\r\n  },\r\n  {\r\n    field: 'AP - Nov',\r\n    headerName: 'Nov',\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: 'AP - Nov Upside',\r\n    headerName: 'Nov Upside',\r\n    width: 150,\r\n    cellStyle: params => {\r\n      if (Number(params.value?.split('%')[0]) > 2.5) {\r\n        return { backgroundColor: 'green', color: 'white' }\r\n      }\r\n      else if (Number(params.value?.split('%')[0]) < -2.5) {\r\n        return { backgroundColor: 'red', color: 'white' }\r\n      }\r\n    },\r\n  },\r\n  {\r\n    field: 'AP - Dec',\r\n    headerName: 'Dec',\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: 'AP - Dec Upside',\r\n    headerName: 'Dec Upside',\r\n    width: 150,\r\n    cellStyle: params => {\r\n      if (Number(params.value?.split('%')[0]) > 2.5) {\r\n        return { backgroundColor: 'green', color: 'white' }\r\n      }\r\n      else if (Number(params.value?.split('%')[0]) < -2.5) {\r\n        return { backgroundColor: 'red', color: 'white' }\r\n      }\r\n    },\r\n  },\r\n  {\r\n    field: 'AP - Jan',\r\n    headerName: 'Jan',\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: 'AP - Jan Upside',\r\n    headerName: 'Jan Upside',\r\n    width: 150,\r\n    cellStyle: params => {\r\n      if (Number(params.value?.split('%')[0]) > 2.5) {\r\n        return { backgroundColor: 'green', color: 'white' }\r\n      }\r\n      else if (Number(params.value?.split('%')[0]) < -2.5) {\r\n        return { backgroundColor: 'red', color: 'white' }\r\n      }\r\n    },\r\n  },\r\n  {\r\n    field: 'AP - Feb',\r\n    headerName: 'Feb',\r\n    type: 'number',\r\n  },\r\n  {\r\n    field: 'AP - Feb Upside',\r\n    headerName: 'Feb Upside',\r\n    width: 150,\r\n    cellStyle: params => {\r\n      if (Number(params.value?.split('%')[0]) > 2.5) {\r\n        return { backgroundColor: 'green', color: 'white' }\r\n      }\r\n      else if (Number(params.value?.split('%')[0]) < -2.5) {\r\n        return { backgroundColor: 'red', color: 'white' }\r\n      }\r\n    },\r\n  },\r\n];\r\n\r\n\r\nconst sampleData = [\r\n  {\r\n    \"id\": 100,\r\n    \"ticker\": \"TD\",\r\n    \"type\": \"stock\",\r\n    \"rating\": \"3 stars\",\r\n    \"morningstar\": \"t=0P00006899\",\r\n    \"AP - Dec\": \"68.77\",\r\n    \"AP - Jan\": \"75\",\r\n    \"AP - Feb\": \"82.2\",\r\n    \"AP - Mar\": \"87.62\",\r\n    \"AP - Apr\": \"86.5\",\r\n    \"AP - May\": \"91.71\",\r\n    \"AP - Jun\": \"91\",\r\n    \"AP - Aug\": \"93\",\r\n  },\r\n\r\n  {\r\n    \"id\": 600,\r\n    \"ticker\": \"TSLA\",\r\n    \"type\": \"stock\",\r\n    \"rating\": \"1.5 stars\",\r\n    \"morningstar\": \"t=0P0000OQN8\",\r\n    \"country\": \"US\",\r\n    \"AP - Dec\": \"501.29\",\r\n    \"AP - Jan\": \"753\",\r\n    \"AP - Feb\": \"670\",\r\n    \"AP - Mar\": \"882\",\r\n    \"AP - Apr\": \"800\",\r\n    \"AP - May\": \"772\",\r\n    \"AP - Jun\": \"800\",\r\n    \"AP - Aug\": \"900\",\r\n    \"AP - Sep\": \"862\",\r\n  },\r\n\r\n  {\r\n    \"id\": 700,\r\n    \"ticker\": \"XIU\",\r\n    \"type\": \"etf\",\r\n    \"desc\": \"TSX\",\r\n    \"morningstar\": \"t=0P000080SM\"\r\n  },\r\n\r\n  {\r\n    \"id\": 1400,\r\n    \"ticker\": \"QQQ\",\r\n    \"type\": \"etf\",\r\n    \"country\": \"US\",\r\n    \"morningstar\": \"t=0P00002D82\"\r\n  },\r\n]\r\n\r\n\r\nexport default function App() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  let localArr = [];\r\n\r\n  // read our data file in the public folder\r\n  const getConfig = new Promise((resolve, reject) => {\r\n    fetch('./data.json')\r\n      .then(function (response) {\r\n        // switch to use real data or sample data for debugging\r\n        resolve(response.json());\r\n        //resolve(sampleData);\r\n      })\r\n      .catch(function (err) {\r\n        reject(Error(\"Get config failed\"));\r\n      });\r\n  });\r\n\r\n  const sleepNow = (delay) => new Promise((resolve) => setTimeout(resolve, delay));\r\n\r\n  async function runLoop(configs) {\r\n    setLoading(true);\r\n    for (const config of configs) {\r\n      //await sleepNow(2500);\r\n\r\n      const url = `${proxy}?id=${config.id}&ticker=${config.ticker}&type=${config.type}&country=${config.country}&morningstar=${config.morningstar}`;\r\n      console.log(url + '[' + new Date().toUTCString() + '] ')\r\n      try {\r\n        const response = await fetch(url);\r\n        let data = await response.json();\r\n\r\n        if (config.type === 'stock') {\r\n          data['Rating'] = config.rating;\r\n        }\r\n\r\n        // loop through Analyst Prices\r\n        for (const [key, value] of Object.entries(config)) {\r\n          if (key.startsWith('AP')) {\r\n            data[key] = value;\r\n          }\r\n          const upside = ((value / data['Price'].replace(',', '')) - 1) * 100;\r\n          data[key + ' Upside'] = upside.toFixed(2) + '%';\r\n        }\r\n\r\n        localArr = [...localArr, data];\r\n        setData(localArr);\r\n      }\r\n      catch (ex) {\r\n        setLoading(false);\r\n        throw new Error('failed to process: ' + ex);\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  // this runs once at start up\r\n  useEffect(() => {\r\n    getConfig\r\n      .then(configs => {\r\n        runLoop(configs);\r\n        // .then(data => {\r\n        //   data; \r\n        // })\r\n        // .catch(error => {\r\n        //   error.message; // 'An error has occurred: 404'\r\n        // });\r\n      \r\n      })\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Stocks</h1>\r\n      <h3>Last refreshed: {new Date().toDateString()} {new Date().toLocaleTimeString()}</h3>\r\n      <Box sx={{ height: 40 }}>\r\n      {loading &&\r\n          <CircularProgress />\r\n      }\r\n      </Box>\r\n      <br />\r\n      <div className=\"ag-theme-alpine\" style={{ height: window.innerHeight * 0.75, width: '100%' }}>\r\n        <AgGridReact\r\n          rowData={data}\r\n          columnDefs={columns.map(({ field, pinned, cellStyle, width }) => ({ 'field': field, 'pinned': pinned, 'cellStyle': cellStyle, 'width': width, sortable: true, filter: true, resizable: true }))}\r\n          rowSelection={'multiple'}\r\n          rowMultiSelectWithClick={true}\r\n        >\r\n\r\n        </AgGridReact>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}